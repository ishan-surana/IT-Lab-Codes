#include <stdio.h>
#include <stdlib.h>

struct poly
{
 int coeff;
 int exp;
 struct poly *next;
};
struct poly* head1=NULL;
struct poly* head2=NULL;

void polynsert(int key, int c, int e)
{
    if(key==1)
    {
        if(head1==NULL)
        {
            struct poly* temp=(struct poly *)malloc(sizeof(struct poly));
            temp->coeff=c;
            temp->exp=e;
            head1=temp;
        }
        else
        {
            struct poly* tracker=head1;
            while(tracker->exp!=e && tracker->next!=NULL) tracker=tracker->next;
            if(tracker->exp==e) tracker->coeff+=c;
            else
            {
                if(e<head1->exp)
                {
                    struct poly* temp=(struct poly *)malloc(sizeof(struct poly));
                    temp->coeff=c;
                    temp->exp=e;
                    temp->next=head1;
                    head1=temp;
                }
                else
                {
                    struct poly* tracker=head1;
                    while(tracker->next->exp<e) tracker=tracker->next;
                    struct poly* temp=(struct poly *)malloc(sizeof(struct poly));
                    temp->coeff=c;
                    temp->exp=e;
                    temp->next=tracker->next;
                    tracker->next=temp;
                }
            }
        }
    }

    if(key==2)
    {
        if(head2==NULL)
        {
            struct poly* temp=(struct poly *)malloc(sizeof(struct poly));
            temp->coeff=c;
            temp->exp=e;
            head2=temp;
        }
        else
        {
            struct poly* tracker=head2;
            while(tracker->exp!=e && tracker->next!=NULL) tracker=tracker->next;
            if(tracker->exp==e) tracker->coeff+=c;
            else
            {
                if(e<head2->exp)
                {
                    struct poly* temp=(struct poly *)malloc(sizeof(struct poly));
                    temp->coeff=c;
                    temp->exp=e;
                    temp->next=head2;
                    head2=temp;
                }
                else
                {
                    struct poly* tracker=head2;
                    while(tracker->next->exp<e) tracker=tracker->next;
                    struct poly* temp=(struct poly *)malloc(sizeof(struct poly));
                    temp->coeff=c;
                    temp->exp=e;
                    temp->next=tracker->next;
                    tracker->next=temp;
                }
            }
        }
    }
}


void traverse(int key)
{
    if(key==1)
    {
        printf("%dx^%d", head1->coeff, head1->exp);
        for(struct poly* temp=head1->next;temp!=NULL;temp=temp->next)
        printf(" + %dx^%d", temp->coeff,temp->exp);
    }
    if(key==2)
    {
        printf("%dx^%d", head2->coeff, head2->exp);
        for(struct poly* temp=head2->next;temp!=NULL;temp=temp->next)
        printf(" + %dx^%d", temp->coeff,temp->exp);
    }
}

int main()
{
    polynsert(1,1,1);
    traverse(1);
    polynsert(1,2,2);
    traverse(1);
    polynsert(1,3,3);
    traverse(1);
    polynsert(1,4,4);
    traverse(1);
    polynsert(1,5,5);
    traverse(1);
}
